{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navigation.js","components/dashboard/Notification.js","components/posts/PostSummary.js","components/posts/PostList.js","components/dashboard/Dashboard.js","components/posts/PostDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/posts/CreatePost.js","store/actions/postActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/postReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","NavLink","to","onClick","className","profile","initials","SignedOutLinks","exact","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notification","data","map","notification","key","id","user","content","moment","time","toDate","fromNow","PostSummary","_ref","title","authorLN","authorFN","createdAt","toString","calendar","concat","PostList","posts","postList","post","posts_PostSummary","authorFirstName","authorLastName","Dashboard","_this$props","this","notifications","posts_PostList","dashboard_Notification","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","SignIn","email","password","handleSubmit","e","preventDefault","_this","signIn","handleChange","name","target","setState","Object","defineProperty","value","authError","onSubmit","onChange","htmlFor","creds","credentials","signInWithEmailAndPassword","catch","error","SignUp","firstName","lastName","passwordConfirm","signUp","console","log","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreatePost","createPost","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navigation","Switch","Route","path","component","PostDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","postReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b980c629.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul>\r\n            <li> <NavLink to='/create'>New Post</NavLink> </li>\r\n            <li> <NavLink to='/' onClick={props.signOut}>Logout</NavLink> </li>\r\n            <li> <NavLink to='/' className=\"btn btn-floating btn-profile pink lighten-1 \">{props.profile.initials}</NavLink> </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","import { getFirebase, getFirestore } from \"react-redux-firebase\";\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((error) => {\r\n            dispatch({ type: \"LOGIN_ERROR\", error })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch((error) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', error })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul>\r\n            <li> <NavLink exact to='/signin'>Login</NavLink> </li>\r\n            <li> <NavLink exact to='/signup'>Signup</NavLink> </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default SignedOutLinks;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navigation = (props) => {\r\n\r\n  const links = props.auth.uid ? <SignedInLinks profile={props.profile} /> : <SignedOutLinks />\r\n\r\n  return (\r\n    <header>\r\n      <nav>\r\n        <Link to=\"/\" className=\"header__logo\">\r\n          POST<span>UR</span>POST\r\n        </Link>\r\n\r\n        <div className=\"header__action\">\r\n          {links}\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment'\r\n\r\nconst Notification = (props) => {\r\n    const { data } = props;\r\n\r\n\r\n    return (\r\n        <div className=\"notification\">\r\n\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {data && data.map(notification => {\r\n                            return (\r\n                                <li key={notification.id}>\r\n                                    <span className=\"pink-text\">{notification.user}</span>\r\n                                    <span>{notification.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(notification.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;","import React from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nconst PostSummary = ({ title, content, authorLN, authorFN, createdAt }) => {\r\n\r\n    const time = moment(createdAt.toDate().toString()).calendar()\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post__title\">{title}</div>\r\n            <div className=\"post__body\">{content}</div>\r\n            <div className=\"post__date\"><p>Posted by {`${authorFN} ${authorLN}`}</p>{time}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostSummary;","import React from 'react';\r\nimport PostSummary from \"./PostSummary\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PostList = ({ posts }) => {\r\n    const postList = posts && posts.map(post => <Link key={post.id} to={`/post/${post.id}`}><PostSummary title={post.title} content={post.content} authorFN={post.authorFirstName} authorLN={post.authorLastName} createdAt={post.createdAt} /></Link>) /* zamiast wypisywac wszystkie mozna przekazac po prostu caly post */\r\n    return (\r\n        <div className=\"post-list\">\r\n            {postList}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostList;","import React, { Component } from 'react'\r\nimport Notification from './Notification'\r\nimport PostList from '../posts/PostList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    state = {}\r\n    render() {\r\n        const { posts, auth, notifications } = this.props;\r\n\r\n        if (!auth.uid) {\r\n            return <Redirect to='/signin' />\r\n        } else {\r\n            return (\r\n                <div className=\"dashboard\">\r\n                    <PostList posts={posts} /> {/* wyciagnieta tablice postow przekazuje jako props do komponentu PostList. */}\r\n                    <Notification data={notifications} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.firestore.ordered.posts,   // odnosi się do reducera rootReducer, pozniej wybieram właściwośc post, która odnosi się do reducera Post, który zwraca state w ktorym znajduję się tablica posts, w której umieszczone są pojedyncze posty.\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n// export default connect(mapStateToProps)(Dashboard);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps), //teraz w propsach Dashboard będzie znajdować się props: posts, czyli tablica postów.\r\n    firestoreConnect([\r\n        { collection: 'posts', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport moment from 'moment'\r\n\r\nconst PostDetails = (props) => {\r\n    const { post } = props;\r\n    // const postId = props.match.params.id;\r\n\r\n    if (post) {\r\n        return (\r\n            <div className=\"post-summary\">\r\n                <div className=\"post\">\r\n                    <div className=\"post__title\">{post.title}</div>\r\n                    <div className=\"post__body\">{post.content}</div>\r\n                    <div className=\"post__date\">{`Posted by  ${post.authorFirstName} ${post.authorLastName} ${moment(props.post.createdAt.toDate().toString()).calendar()}`} </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\"><p>Loading post...</p></div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToStore = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const posts = state.firestore.data.posts;\r\n    const post = posts ? posts[id] : null;\r\n    return {\r\n        post //teraz w porpsach jest wlasciwosc post która przechowuje dane o poscie o pobranym z url id.\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToStore),\r\n    firestoreConnect([\r\n        { collection: 'posts' }\r\n    ])\r\n)(PostDetails);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const name = e.target.name;\r\n        this.setState({ [name]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n\r\n        if (auth.uid) {\r\n            return <Redirect to='/' />\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"signin-container\">\r\n                    <h3 className=\"title\">Sign In <span>Now</span></h3>\r\n                    <div className=\"row\">\r\n                        <form className=\"col s12\" onSubmit={this.handleSubmit}>\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s12\">\r\n                                    <input name=\"email\" id=\"email\" type=\"email\" className=\"validate\" onChange={this.handleChange} />\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s12\">\r\n                                    <input name=\"password\" id=\"password\" type=\"password\" className=\"validate\" onChange={this.handleChange} />\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <button type=\"submit\" className=\"waves-effect waves-light btn red lighten-1 right\">Sign In</button>\r\n                            <div className=\"red-text center\">\r\n                                {authError ? <p>{authError}</p> : null}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        passwordConfirm: '',\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.password === this.state.passwordConfirm) {\r\n            this.props.signUp({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName\r\n            })\r\n        }\r\n        else {\r\n            console.log('nope');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const name = e.target.name;\r\n        this.setState({ [name]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { auth, authError } = this.props;\r\n\r\n        if (auth.uid) {\r\n            return <Redirect to='/' />\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"signup-container\">\r\n                    <h3 className=\"title\">Sign Up <span>Now</span></h3>\r\n                    <div className=\"row\">\r\n                        <form className=\"col s12\" onSubmit={this.handleSubmit}>\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s6\">\r\n                                    <input id=\"first_name\" name=\"firstName\" type=\"text\" className=\"validate\" onChange={this.handleChange} />\r\n                                    <label htmlFor=\"first_name\">First Name</label>\r\n                                </div>\r\n                                <div className=\"input-field col s6\">\r\n                                    <input id=\"last_name\" name=\"lastName\" type=\"text\" className=\"validate\" onChange={this.handleChange} />\r\n                                    <label htmlFor=\"last_name\">Last Name</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s6\">\r\n                                    <input id=\"password\" name=\"password\" type=\"password\" className=\"validate\" onChange={this.handleChange} />\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                </div>\r\n                                <div className=\"input-field col s6\">\r\n                                    <input id=\"password_confirm\" name=\"passwordConfirm\" type=\"password\" className=\"validate\" onChange={this.handleChange} />\r\n                                    <label htmlFor=\"password_confirm\">Password (Confirm)</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s12\">\r\n                                    <input id=\"email\" name=\"email\" type=\"email\" className=\"validate\" onChange={this.handleChange} />\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                </div>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"waves-effect waves-light btn red lighten-1 right\">Sign Up</button>\r\n                            <div className=\"red-text center\">\r\n                                {authError ? <p>{authError}</p> : null}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createPost } from '../../store/actions/postActions';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreatePost extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.createPost(this.state)\r\n        this.props.history.push('/'); //powrot na stronę główną\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const name = e.target.name;\r\n        this.setState({ [name]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { auth } = this.props;\r\n\r\n        if (!auth.uid) {\r\n            return <Redirect to='/signin' />\r\n        } else {\r\n            return (\r\n                <div className=\"create-post-container\">\r\n                    <h3 className=\"title\">Create Post <span>Now</span></h3>\r\n                    <div className=\"row\">\r\n                        <form className=\"col s12\" onSubmit={this.handleSubmit}>\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s12\">\r\n                                    <input id=\"post_title\" name=\"title\" type=\"text\" className=\"validate\" onChange={this.handleChange} />\r\n                                    <label htmlFor=\"post_title\">Post title</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s12\">\r\n                                    <textarea id=\"textarea\" name=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} ></textarea>\r\n                                    <label htmlFor=\"textarea\">Post Content</label>\r\n                                </div>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"waves-effect waves-light btn red lighten-1 right\">Create</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createPost: (post) => dispatch(createPost(post))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePost)","/*  normalnie wykonywane by bylo to:\r\nexport const createPost = (post) => {\r\n    return {\r\n        type: 'ADD_POST',\r\n        post\r\n    }\r\n}\r\n*/\r\n// jednak z uzyciem thunka przekazujemy funkcje\r\nexport const createPost = (post) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // tutaj asynchroniczne zapytania do bazy danych\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('posts').add({\r\n            ...post,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_POST', post })\r\n        }).catch((error) => {\r\n            dispatch({ type: \"CREATE_POST_ERROR\", error })\r\n        })\r\n\r\n    }\r\n};","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport './scss/style.scss'\nimport Navigation from './components/layout/Navigation'\nimport Dashboard from './components/dashboard/Dashboard'\nimport PostDetails from './components/posts/PostDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreatePost from './components/posts/CreatePost'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navigation />\n          <main>\n            <Switch>\n              <Route exact path='/' component={Dashboard} />\n              <Route path='/post/:id' component={PostDetails} />\n              <Route path='/signin' component={SignIn} />\n              <Route path='/signup' component={SignUp} />\n              <Route path='/create' component={CreatePost} />\n            </Switch>\n          </main>\n        </div>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            return {\r\n                ...state,\r\n                authError: 'null'\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('nowy uzytkownik zarejestrowany');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('blad przy rejestracji');\r\n            return {\r\n                ...state,\r\n                authError: action.error.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    posts: [\r\n        { id: 1, title: 'Lorem ipsum dolor sit amet', content: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Asperiores, temporibus!' },\r\n        { id: 2, title: 'Lorem ipsum', content: 'Lorem ipsum, dolor sit amet  adipisicing elit. Asperiores, temporibus!' },\r\n        { id: 3, title: 'Lorem ipsum dolor', content: 'Lorem ipsum,  sit amet consectetur adipisicing, temporibus!' },\r\n    ]\r\n\r\n}\r\n\r\nconst postReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_POST':\r\n            console.log('created post', action.post);\r\n            return state;\r\n        case 'CREATE_POST_ERROR':\r\n            console.log('error: ', action.error)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default postReducer;","import authReducer from './authReducer'\r\nimport postReducer from './postReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    post: postReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyAh25NCKvroWTHeMAej2sbgvckiTfKwcqM\",\r\n    authDomain: \"post-app-2b894.firebaseapp.com\",\r\n    databaseURL: \"https://post-app-2b894.firebaseio.com\",\r\n    projectId: \"post-app-2b894\",\r\n    storageBucket: \"post-app-2b894.appspot.com\",\r\n    messagingSenderId: \"943509568691\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware, compose } from 'redux'; //metoda potrzebna do stworzenia store / metoda do aplikowania roznych middleware\nimport rootReducer from './store/reducers/rootReducer'; //polaczone reducery za pomoca metody combineReducers\nimport { Provider } from 'react-redux'; //biblioteka potrzebna do polaczenia redux z reactem\nimport thunk from 'redux-thunk'; // redux middleware / do asynchronicznego wysylania danych\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport firebaseConfig from './config/firebaseConfig';\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(firebaseConfig),\n        reactReduxFirebase(firebaseConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}